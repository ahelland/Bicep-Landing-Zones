name: Deploy EasyAuth Default sample
#on: [push]
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment for deployment'
        type: environment
        required: true
      appName:
        description: 'Name of app'
        type: string
        required: true
  
permissions:
      id-token: write
      contents: read
      
jobs: 
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint code
        run: |
          az bicep build --file ./credless-in-azure-samples/part-2/easyauth-default/main.bicep

  Validate:
    runs-on: ubuntu-latest
    needs: lint
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v2
      
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Run preflight validation'
        uses: azure/arm-deploy@v1
        with: 
          scope: subscription
          region: norwayeast
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          deploymentName: ${{ github.run_number }}         
          template: ./credless-in-azure-samples/part-2/easyauth-default/main.bicep
          parameters: ./credless-in-azure-samples/part-2/easyauth-default/azuredeploy.${{ github.event.inputs.environment }}.parameters.json env=${{ github.event.inputs.environment }}
          deploymentMode: Validate

  What-if:
    runs-on: ubuntu-latest
    needs: Validate
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v2
      
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: 'Run what-if'
        uses: azure/cli@v1      
        with: 
          inlineScript: |
            az deployment sub what-if --location norwayeast \
              --name ${{ github.run_number }} \
              --template-file ./credless-in-azure-samples/part-2/easyauth-default/main.bicep \
              --parameters ./credless-in-azure-samples/part-2/easyauth-default/azuredeploy.${{ github.event.inputs.environment }}.parameters.json env=${{ github.event.inputs.environment }}

  Deploy:
    runs-on: ubuntu-latest
    needs: What-if
    environment: ${{ github.event.inputs.environment }}
    steps:
    - uses: actions/checkout@v2
    
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Create Azure AD App Registration
      id: appreg
      run: |
        export appName=${{ github.event.inputs.appName }}     
        export replyUrl="https://${{ github.event.inputs.appName }}.azurewebsites.net/.auth/login/aad/callback" 
        appId=$(az ad app create --display-name $appName --reply-urls $replyUrl --query appId) 
        echo "::set-output name=appId::$appId"
    
    - name: 'Create Service Principal'
      continue-on-error: true
      run: |
        az ad sp create --id ${{ steps.appreg.outputs.appId }}        

    - name: 'Add Permissions'      
      run: |
        az ad app permission add --id ${{ steps.appreg.outputs.appId }} --api 00000003-0000-0000-c000-000000000000 --api-permissions 311a71cc-e848-46a1-bdf8-97ff7156d8e6=Scope 
        az ad app permission grant --id ${{ steps.appreg.outputs.appId }} --api 00000003-0000-0000-c000-000000000000 
  
    - name: 'Deploy Azure App Service'
      id: deploy
      uses: azure/cli@v1      
      with:
        inlineScript: |
          az deployment sub create --location norwayeast \
            --name ${{ github.run_number }} \
            --template-file ./credless-in-azure-samples/part-2/easyauth-default/main.bicep \
            --parameters ./credless-in-azure-samples/part-2/easyauth-default/azuredeploy.${{ github.event.inputs.environment }}.parameters.json env=${{ github.event.inputs.environment }} appName=${{ github.event.inputs.appName }} authClientId=${{ steps.appreg.outputs.appId }}
    
    - name: 'Retrieve Outputs'
      id: getOutputs
      uses: azure/powershell@v1
      with:
        inlineScript: |
          $bicepOutput=(az deployment sub show -n ${{ github.run_number }} | ConvertFrom-Json | foreach properties | foreach parameters | select -ExpandProperty 'suffix')
          $bicepOutput=$bicepOutput.value
          echo "::set-output name=bicepOutput::$bicepOutput"
        azPSVersion: "latest"

    - name: 'Update App Registration'
      run: |
        # export updatedReplyUrl=(${{ steps.getOutputs.outputs.bicepOutput }} | jq '.properties.parameters.suffix.value')
        # export suffix=$(${{ steps.getOutputs.outputs.bicepOutput }} | ConvertFrom-Json | foreach properties | foreach parameters | select -ExpandProperty "suffix")
        export suffix=${{ steps.getOutputs.outputs.bicepOutput }}
        az ad app update --id ${{ steps.appreg.outputs.appId }} --reply-urls "https://app-${{ github.event.inputs.environment }}-${{ github.event.inputs.appName }}-$suffix.azurewebsites.net/.auth/login/aad/callback"  