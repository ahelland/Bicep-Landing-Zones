name: Deploy Credless B2C Sample App
#on: [push]
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to verify'
        type: environment
        required: true
      appName:
        description: 'Name of app'
        type: string
        required: true
  
permissions:
      id-token: write
      contents: read
      
jobs: 
  Lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint code
        run: |
          az bicep build --file ./credless-in-azure-samples/part-5/infra/level-2/main.bicep

  Validate:
    runs-on: ubuntu-latest
    needs: Lint
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v2
      
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Run preflight validation'
        uses: azure/arm-deploy@v1
        with: 
          scope: subscription
          region: norwayeast
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          deploymentName: ${{ github.run_number }}         
          template: ./credless-in-azure-samples/part-5/infra/level-2/main.bicep
          parameters: ./credless-in-azure-samples/part-5/infra/level-2/azuredeploy.${{ github.event.inputs.environment }}.parameters.json env=${{ github.event.inputs.environment }} acrName=placeholder authClientId=client-guid-1234 AzureAd__Instance=https://contoso.b2clogin.com/ AzureAd__Domain=contoso.onmicrosoft.com AzureAd__TenantId=tenant-guid-1234 AzureAd__ClientId=b2c-client-guid-1234
          deploymentMode: Validate

  What-if:
    runs-on: ubuntu-latest
    needs: Validate
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v2
      
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: 'Run what-if'
        uses: azure/cli@v1      
        with: 
          inlineScript: |
            az deployment sub what-if --location norwayeast \
              --name ${{ github.run_number }} \
              --template-file ./credless-in-azure-samples/part-5/infra/level-2/main.bicep \
              --parameters ./credless-in-azure-samples/part-5/infra/level-2/azuredeploy.${{ github.event.inputs.environment }}.parameters.json env=${{ github.event.inputs.environment }} acrName=placeholder authClientId=client-guid-1234 AzureAd__Instance=https://contoso.b2clogin.com/ AzureAd__Domain=contoso.onmicrosoft.com AzureAd__TenantId=tenant-guid-1234 AzureAd__ClientId=b2c-client-guid-1234

  # A app registration for B2C needs to exist to deploy the B2C SuSi app.
  # Reply url will have to be configured after containers have been deployed.
  B2C-App-Registration:
    runs-on: ubuntu-latest
    needs: What-if
    environment: ${{ github.event.inputs.environment }}
    outputs:
      appIdB2C: ${{ steps.appregb2c.outputs.appId }}

    steps:
    - uses: actions/checkout@v2

    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.B2C_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.B2C_AZURE_TENANT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: true  

    - name: Create Azure AD B2C App Registration
      id: appregb2c
      run: |
        export appName=${{ github.event.inputs.appName }}            
        appId=$(az ad app create --display-name $appName --query appId) 
        echo "::set-output name=appId::$appId"

    - name: 'Create B2C Service Principal'
      continue-on-error: true
      run: |
        az ad sp create --id ${{ steps.appregb2c.outputs.appId }} 

    # az cli seems to have a bug, so it's not working.
    #- name: 'Add Permissions to B2C Client App'  
    #  continue-on-error: true    
    #  run: |        
    #    az ad app permission grant --id ${{ steps.appregb2c.outputs.appId }} --api 00000003-0000-0000-c000-000000000000 --scope "openid offline_access"

    - name: 'Add Permissions to B2C Client App'
      uses: azure/powershell@v1
      with:
        inlineScript: |
          # openid
          Add-AzADAppPermission -ApplicationId ${{ steps.appregb2c.outputs.appId }} -ApiId "00000003-0000-0000-c000-000000000000" -PermissionId "37f7f235-527c-4136-accd-4a02d197296e" -Type "Scope"
          # offline_access"
          Add-AzADAppPermission -ApplicationId ${{ steps.appregb2c.outputs.appId }} -ApiId "00000003-0000-0000-c000-000000000000" -PermissionId "7427e0e9-2fba-42fe-b0c0-848c9e6a8182" -Type "Scope"          
        azPSVersion: "latest"

  Deploy:
    runs-on: ubuntu-latest
    needs: B2C-App-Registration
    environment: ${{ github.event.inputs.environment }}
    outputs:
      replyUrlB2C: ${{ steps.getReplyUrlB2C.outputs.replyUrlB2C }}
      metadata:    ${{ steps.getMetadataUrl.outputs.metadata }}
      appIdB2C:    ${{ steps.getAppregB2C.outputs.appIdB2C }}
    
    steps:
    - uses: actions/checkout@v2
    
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true 

    - name: Create Azure AD App Registration
      id: appreg
      run: |
        export appName=${{ github.event.inputs.appName }}                    
        appId=$(az ad app create --display-name $appName --query appId) 
        echo "::set-output name=appId::$appId"

    # Seems variables can only be passed between two adjacent steps, so we need to pass through.
    - name: Passthrough variable
      id: getAppregB2C
      run: |
        export appIdB2C=${{ needs.B2C-App-Registration.outputs.appIdB2C }}
        echo "::set-output name=appIdB2C::$appIdB2C"

    - name: 'Create Service Principal'
      continue-on-error: true
      run: |
        az ad sp create --id ${{ steps.appreg.outputs.appId }} 

    # az cli seems to have a bug, so it's not working.
    #- name: 'Add Permissions'  
    #  continue-on-error: true    
    #  run: |
    #    az ad app permission add --id ${{ steps.appreg.outputs.appId }} --api 00000003-0000-0000-c000-000000000000 --api-permissions e1fe6dd8-ba31-4d61-89e7-88639da4683d=Scope 
    #    az ad app permission grant --id ${{ steps.appreg.outputs.appId }} --api 00000003-0000-0000-c000-000000000000 --scope User.Read
  
    - name: 'Add Permissions'
      uses: azure/powershell@v1
      with:
        inlineScript: |          
          # User.Read
          Add-AzADAppPermission -ApplicationId ${{ steps.appreg.outputs.appId }} -ApiId "00000003-0000-0000-c000-000000000000" -PermissionId "e1fe6dd8-ba31-4d61-89e7-88639da4683d" -Type "Scope"          
        azPSVersion: "latest"

    - name: 'Deploy Azure Container Registry'
      uses: azure/cli@v1      
      with:
        inlineScript: |
          az deployment sub create --location norwayeast \
            --name ${{ github.run_number }} \
            --template-file ./credless-in-azure-samples/part-5/infra/level-1/main.bicep \
            --parameters ./credless-in-azure-samples/part-5/infra/level-1/azuredeploy.${{ github.event.inputs.environment }}.parameters.json env=${{ github.event.inputs.environment }} appName=${{ github.event.inputs.appName }}

    - name: 'Retrieve AcrName'
      id: getAcrName
      uses: azure/powershell@v1
      with:
        inlineScript: |
          $acrName=(az deployment sub show -n ${{ github.run_number }} | ConvertFrom-Json | foreach properties | foreach parameters | select -ExpandProperty 'acrName')
          $acrName=$acrName.value
          echo "::set-output name=acrName::$acrName"
        azPSVersion: "latest"

    - name: Build and push metadata container to ACR
      run: |
        cd ./credless-in-azure-samples/part-5/src/oidc-metadata
        az acr build --registry ${{ steps.getAcrName.outputs.acrName }} --image oidc:${{ github.run_number }} .
    
    - name: Build and push susigen container to ACR
      run: |
        cd ./credless-in-azure-samples/part-5/src/susi-generator
        az acr build --registry ${{ steps.getAcrName.outputs.acrName }} --image susigen:${{ github.run_number }} .

    - name: Build and push b2csusiapp container to ACR
      run: |
        cd ./credless-in-azure-samples/part-5/src/b2c-susi-app
        az acr build --registry ${{ steps.getAcrName.outputs.acrName }} --image b2csusiapp:${{ github.run_number }} .

    - name: 'Deploy Azure Container Environment, Apps and stuff'
      uses: azure/cli@v1      
      with:
        inlineScript: |
          export acrName=${{ steps.getACrName.outputs.acrName }}
          az deployment sub create --location norwayeast \
            --name ${{ github.run_number }} \
            --template-file ./credless-in-azure-samples/part-5/infra/level-2/main.bicep \
            --parameters ./credless-in-azure-samples/part-5/infra/level-2/azuredeploy.${{ github.event.inputs.environment }}.parameters.json env=${{ github.event.inputs.environment }} appName=${{ github.event.inputs.appName }} acrName=$acrName authClientId=${{ steps.appreg.outputs.appId }} AzureAd__Instance=https://${{ secrets.B2C_TENANT_NAME }} AzureAd__Domain=${{ secrets.B2C_TENANT_NAME }} AzureAd__TenantId=${{ secrets.B2C_AZURE_TENANT_ID }} AzureAd__ClientId=${{ needs.B2C-App-Registration.outputs.appIdB2C }} metadataContainerImage=oidc:${{ github.run_number }} susiGenContainerImage=susigen:${{ github.run_number }} b2csusiAppContainerImage=b2csusiapp:${{ github.run_number }}

    - name: 'Retrieve ReplyUrl'
      id: getReplyUrl
      uses: azure/powershell@v1
      with:
        inlineScript: |
          $replyUrl=(az deployment sub show -n ${{ github.run_number }} | ConvertFrom-Json | foreach properties | foreach outputs | select -ExpandProperty 'susigen_url')          
          $replyUrl=$replyUrl.value
          echo "::set-output name=replyUrl::$replyUrl"
        azPSVersion: "latest"
    
    - name: 'Retrieve Metadata Endpoint'
      id: getMetadataUrl
      uses: azure/powershell@v1
      with:
        inlineScript: |
          $metadata=(az deployment sub show -n ${{ github.run_number }} | ConvertFrom-Json | foreach properties | foreach outputs | select -ExpandProperty 'oidc_metadata')
          $metadata=$metadata.value
          echo "::set-output name=metadata::$metadata"
        azPSVersion: "latest"

    # Reply url for B2C must be retrieved in the context of the resource sub, 
    # while the app reg must be set in the B2C tenant context afterwards.
    - name: 'Retrieve B2C ReplyUrl'
      id: getReplyUrlB2C
      uses: azure/powershell@v1
      with:
        inlineScript: |
          $replyUrlB2C=(az deployment sub show -n ${{ github.run_number }} | ConvertFrom-Json | foreach properties | foreach outputs | select -ExpandProperty 'b2capp_url')
          $replyUrlB2C=$replyUrlB2C.value
          echo "::set-output name=replyUrlB2C::$replyUrlB2C"
        azPSVersion: "latest"

    - name: 'Update App Registration'
      run: |
        export replyUrl=${{ steps.getReplyUrl.outputs.replyUrl }}
        az ad app update --id ${{ steps.appreg.outputs.appId }} --web-home-page-url "https://$replyUrl"  --web-redirect-uris "https://$replyUrl/.auth/login/aad/callback"  

  Deploy-B2C:
    runs-on: ubuntu-latest
    needs: deploy
    environment: ${{ github.event.inputs.environment }}
    steps:
    - uses: actions/checkout@v2

    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.B2C_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.B2C_AZURE_TENANT_ID }}
          allow-no-subscriptions: true
          enable-AzPSSession: true    

    - name: Replace placeholder values
      run: |    
        sed -i 's|${B2C_TENANT_NAME}|${{ secrets.B2C_TENANT_NAME }}|g' ./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/TrustFrameworkBase.xml
        sed -i 's|${B2C_TENANT_NAME}|${{ secrets.B2C_TENANT_NAME }}|g' ./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/TrustFrameworkLocalization.xml
        sed -i 's|${B2C_TENANT_NAME}|${{ secrets.B2C_TENANT_NAME }}|g; s|${B2C_PROXY_IEF_APPID}|${{ secrets.B2C_PROXY_IEF_APPID }}|g; s|${B2C_IEF_APPID}|${{ secrets.B2C_IEF_APPID }}|g' ./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/TrustFrameworkExtensions.xml
        sed -i 's|${B2C_TENANT_NAME}|${{ secrets.B2C_TENANT_NAME }}|g' ./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/SignUpOrSignin.xml
        sed -i 's|${B2C_TENANT_NAME}|${{ secrets.B2C_TENANT_NAME }}|g; s|${OIDC_METADATA_URL}|https://${{ needs.Deploy.outputs.metadata }}/.well-known/openid-configuration-b2c|g; s|${TOKEN_HINT_AUDIENCE}|contosob2c|g; s|${TOKEN_HINT_ISSUER}|https://contoso.com|g' ./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/Invitation_Link.xml
        sed -i 's|${B2C_TENANT_NAME}|${{ secrets.B2C_TENANT_NAME }}|g; s|${OIDC_METADATA_URL}|https://${{ needs.Deploy.outputs.metadata }}/.well-known/openid-configuration-b2c|g; s|${TOKEN_HINT_AUDIENCE}|contosob2c|g; s|${TOKEN_HINT_ISSUER}|https://contoso.com|g' ./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/Signin_Link.xml
        
    - name: 'Upload Custom Policies'
      uses: azure/powershell@v1
      with:
        inlineScript: |
          $token = Get-AzAccessToken -ResourceUrl "https://graph.microsoft.com/"
          Install-Module -Name Microsoft.Graph.Identity.SignIns
          Select-MgProfile -Name "beta"
          Connect-MgGraph -AccessToken $token.Token
          Set-MgTrustFrameworkPolicyContent -TrustFrameworkPolicyId "B2C_1A_TrustFrameworkBase_GitHub" -InFile "./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/TrustFrameworkBase.xml"
          Set-MgTrustFrameworkPolicyContent -TrustFrameworkPolicyId "B2C_1A_TrustFrameworkLocalization_GitHub" -InFile "./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/TrustFrameworkLocalization.xml"
          Set-MgTrustFrameworkPolicyContent -TrustFrameworkPolicyId "B2C_1A_TrustFrameworkExtensions_GitHub" -InFile "./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/TrustFrameworkExtensions.xml"
          Set-MgTrustFrameworkPolicyContent -TrustFrameworkPolicyId "B2C_1A_Signup_Signin_GitHub" -InFile "./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/SignUpOrSignin.xml"
          Set-MgTrustFrameworkPolicyContent -TrustFrameworkPolicyId "B2C_1A_Invitation_Link_GitHub" -InFile "./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/Invitation_Link.xml"
          Set-MgTrustFrameworkPolicyContent -TrustFrameworkPolicyId "B2C_1A_Signin_Link_GitHub" -InFile "./credless-in-azure-samples/part-5/azure-ad-b2c/custom-policies/Signin_Link.xml"
        azPSVersion: "latest"

    - name: 'Update B2C App Registration'
      run: |
        export replyUrlB2C=${{ needs.Deploy.outputs.replyUrlB2C }}
        export appId=${{ needs.Deploy.outputs.appIdB2C }}
        az ad app update --id $appId  --web-redirect-uris "https://$replyUrlB2C/signin-oidc" --enable-id-token-issuance true --enable-access-token-issuance true
